version: "3.7"

services:
  webapp2:
    image: 365522784498.dkr.ecr.eu-west-3.amazonaws.com/oz-app2:1.0.1
    networks:
      - traefik-public
    environment:
      - WEB2_DOMAIN=web2.andyrum.com
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "128M"
        # reservations:
        #   cpus: "0.1"
        #   memory: 128M
      update_config:
        order: start-first
      placement:
        constraints:
          - node.role == worker
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.web2-http.rule=Host(`${WEB2_DOMAIN?Variable not set}`)
        - traefik.http.routers.web2-http.entrypoints=http
        - traefik.http.routers.web2-http.middlewares=https-redirect
        - traefik.http.routers.web2-https.rule=Host(`${WEB2_DOMAIN?Variable not set}`)
        - traefik.http.routers.web2-https.entrypoints=https
        - traefik.http.routers.web2-https.tls=true
        - traefik.http.routers.web2-https.tls.certresolver=le
        - traefik.http.services.web2.loadbalancer.server.port=3000
        - traefik.http.services.web2.loadbalancer.healthcheck.path=/
        - traefik.http.services.web2.loadbalancer.healthcheck.interval=5s

  web:
    image: 365522784498.dkr.ecr.eu-west-3.amazonaws.com/oz-webapp:1.0.2
    networks:
      - traefik-public
    environment:
      - WEB_DOMAIN=web.andyrum.com
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "128M"
        # reservations:
        #   cpus: "0.1"
        #   memory: 128M
      update_config:
        order: start-first
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.web-http.rule=Host(`${WEB_DOMAIN?Variable not set}`)
        - traefik.http.routers.web-http.entrypoints=http
        - traefik.http.routers.web-http.middlewares=https-redirect
        - traefik.http.routers.web-https.rule=Host(`${WEB_DOMAIN?Variable not set}`)
        - traefik.http.routers.web-https.entrypoints=https
        - traefik.http.routers.web-https.tls=true
        - traefik.http.routers.web-https.tls.certresolver=le
        - traefik.http.services.web.loadbalancer.server.port=3000
        - traefik.http.services.web.loadbalancer.healthcheck.path=/
        - traefik.http.services.web.loadbalancer.healthcheck.interval=5s

  # mongo:
  #   image: mongo:latest
  #   networks:
  #     - traefik-public
  #   restart: always
  #   deploy:
  #     labels:
  #       - traefik.tcp.routers.mongodb.rule=HostSNI(`${MONGODB_URL?Variable not set}`)
  #       - traefik.tcp.routers.mongodb.tls=true
  #       - traefik.tcp.routers.mongodb.entrypoints=mongo

networks:
  traefik-public:
    external: true
